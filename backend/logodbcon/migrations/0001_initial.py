# Generated by Django 4.2.7 on 2024-05-18 13:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authcentral', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SQLQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('query', models.TextField()),
                ('parameters', models.JSONField(blank=True, default=list, null=True)),
                ('guidance_text', models.TextField(blank=True, default='\n        Parametrik SQL Sorgusu Oluşturma Klavuzu:\n        - Sorgunuzda parametre kullanmak için, parametre yerine \'?\' işaretini kullanın.\n        - \'startdate\' ve \'enddate\' gibi tarih parametreleri için, istek URL\'sinde \'YYYY-MM-DD\' formatında tarihleri belirtin.\n        - Diğer parametreler (\'cardcode\', \'itemcode\' vb.) için de benzer şekilde, istek URL\'sinde parametre değerlerini belirtin.\n        - SQL sorgunuzda şema bilgisini "{schema}" placeholder\'ı ile belirtin:\n        Ornek parametre: [{"name": "", "type": "", "description": ""}]\n        Örnek Sorgu:\n        WITH RiskCalculation AS (\n            SELECT\n                "CardCode",\n                "CardName",\n                ...\n                WHERE "RefDate" BETWEEN ? AND ?), 0) AS "Balance",\n                ...\n        )\n        SELECT\n            "CardCode",\n            "CardName",\n            "Balance",\n            ...\n        FROM\n            RiskCalculation\n        WHERE\n            ("Balance" + "TotalOrders" + "TotalDelivery") != 0;\n        - Bu sorguyu çağırırken, URL\'niz şu şekilde olmalıdır: /api/query/TEST?startdate=2023-01-01&enddate=2023-12-31\n        ')),
                ('departments', models.ManyToManyField(blank=True, related_name='logodbcon_queries_departments', to='authcentral.department')),
                ('positions', models.ManyToManyField(blank=True, related_name='logodbcon_positions', to='authcentral.position')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
