# Generated by Django 5.0.8 on 2024-12-20 16:59

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import productconfig.models.option
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(max_length=255, verbose_name='Marka Adı')),
            ],
            options={
                'verbose_name': '01-Marka',
                'verbose_name_plural': '01-Markalar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('description', models.TextField(help_text='Kılavuzun detaylı açıklaması.', verbose_name='Amaci')),
                ('steps', models.TextField(help_text='Adım adım talimatlar. Markdown destekler.', verbose_name='Islem Adımlari')),
                ('category', models.CharField(help_text='Kılavuzun ait olduğu model yapisi. Örneğin: Marka, Ürün Grupları.', max_length=100, verbose_name='Model')),
                ('is_visible', models.BooleanField(default=True, help_text='Kılavuzun aktif olarak gösterilip gösterilmeyeceğini belirler.', verbose_name='Görünür mü?')),
            ],
            options={
                'verbose_name': 'Kılavuz',
                'verbose_name_plural': 'Kılavuzlar',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(max_length=255, verbose_name='Kategori Adı')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='productconfig.brand', verbose_name='Marka')),
            ],
            options={
                'verbose_name': '03-Kategori',
                'verbose_name_plural': '03-Kategoriler',
                'ordering': ['brand', 'product_group', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(max_length=255, verbose_name='Seçenek Adı')),
                ('option_type', models.CharField(choices=[('model_question_options', 'Model Soru Seçenekleri'), ('master_question_options', 'Master Soru Seçenekleri'), ('conditional_question_options', 'Koşullu Soru Seçenekleri')], default='model_question_options', max_length=30, verbose_name='Seçenek Tipi')),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, help_text='Seçenek için aktif fiyat. Otomatik olarak güncellenir.', max_digits=10, verbose_name='Fiyat')),
                ('normal_price', models.DecimalField(decimal_places=2, default=0, help_text='Malzemeye bağımlı olmayan temel fiyat', max_digits=10, verbose_name='Normal Fiyat')),
                ('price_melamine', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Melamin Fiyatı')),
                ('price_laminate', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Laminat Fiyatı')),
                ('price_veneer', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Kaplama Fiyatı')),
                ('price_lacquer', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Lake Fiyatı')),
                ('color_status', models.CharField(choices=[('colored', 'Renkli Ürün'), ('colorless', 'Renksiz Ürün'), ('both', 'Her İkisi İçin Uygun')], default='both', max_length=10, verbose_name='Renk Durumu')),
                ('variant_code_part', models.CharField(blank=True, help_text='Seçenek seçildiğinde varyant koduna eklenecek parça', max_length=50, null=True, verbose_name='Varyant Kodu Parçası')),
                ('variant_description_part', models.CharField(blank=True, help_text='Seçenek seçildiğinde varyant açıklamasına eklenecek parça', max_length=255, null=True, verbose_name='Varyant Tanımı Parçası')),
                ('image', models.ImageField(blank=True, help_text='Maksimum dosya boyutu: 5MB. İzin verilen formatlar: JPG, PNG', null=True, upload_to=productconfig.models.option.option_image_path, verbose_name='Seçenek Resmi')),
                ('is_popular', models.BooleanField(default=False, help_text='Popüler seçenekler listede öncelikli gösterilir', verbose_name='Popüler mi?')),
                ('question_relation_count', models.IntegerField(default=0, editable=False, verbose_name='Soru İlişki Sayısı')),
                ('applicable_brands', models.ManyToManyField(blank=True, help_text='Bu seçeneğin uygulanabileceği markalar', related_name='applicable_options', to='productconfig.brand', verbose_name='İlgili Markalar')),
                ('applicable_categories', models.ManyToManyField(blank=True, help_text='Bu seçeneğin uygulanabileceği kategoriler', related_name='applicable_options', to='productconfig.category', verbose_name='İlgili Kategoriler')),
                ('lacquer_triggers', models.ManyToManyField(blank=True, help_text='Bu seçeneklerden herhangi biri seçildiğinde lake fiyatı uygulanır', related_name='lacquer_price_triggers_for', to='productconfig.option', verbose_name='Lake Fiyat Tetikleyicileri')),
                ('laminate_triggers', models.ManyToManyField(blank=True, help_text='Bu seçeneklerden herhangi biri seçildiğinde laminat fiyatı uygulanır', related_name='laminate_price_triggers_for', to='productconfig.option', verbose_name='Laminat Fiyat Tetikleyicileri')),
                ('melamine_triggers', models.ManyToManyField(blank=True, help_text='Bu seçeneklerden herhangi biri seçildiğinde melamin fiyatı uygulanır', related_name='melamine_price_triggers_for', to='productconfig.option', verbose_name='Melamin Fiyat Tetikleyicileri')),
                ('veneer_triggers', models.ManyToManyField(blank=True, help_text='Bu seçeneklerden herhangi biri seçildiğinde kaplama fiyatı uygulanır', related_name='veneer_price_triggers_for', to='productconfig.option', verbose_name='Kaplama Fiyat Tetikleyicileri')),
            ],
            options={
                'verbose_name': '08-Seçenek',
                'verbose_name_plural': '08-Seçenekler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PriceMultiplierRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(help_text='Kuralı tanımlayan benzersiz isim', max_length=255, verbose_name='Kural Adı')),
                ('description', models.TextField(blank=True, help_text='Kural hakkında detaylı açıklama', verbose_name='Açıklama')),
                ('multiplier_factor', models.DecimalField(decimal_places=2, help_text='Hedef seçeneğin fiyatı bu değer ile çarpılacak (0.01-100.00)', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100.0)], verbose_name='Çarpan Faktörü')),
                ('min_trigger_count', models.PositiveIntegerField(default=1, help_text='Kuralın tetiklenmesi için gereken minimum seçenek sayısı', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Minimum Tetikleyici Sayısı')),
                ('logical_operator', models.CharField(choices=[('and', 'VE (Tüm seçenekler seçilmeli)'), ('or', 'VEYA (Herhangi biri seçilebilir)')], default='and', help_text='Tetikleyici seçeneklerin nasıl değerlendirileceğini belirler', max_length=3, verbose_name='Mantıksal Operatör')),
                ('order', models.PositiveIntegerField(default=0, help_text='Kuralların değerlendirilme sırası', verbose_name='Sıra')),
                ('target_options', models.ManyToManyField(help_text='Fiyatı çarpan ile değişecek seçenekler', related_name='price_multiplier_rules_as_target', to='productconfig.option', verbose_name='Hedef Seçenekler')),
                ('trigger_options', models.ManyToManyField(help_text='Bu seçenekler seçildiğinde kural tetiklenir', related_name='triggering_rules', to='productconfig.option', verbose_name='Tetikleyici Seçenekler')),
            ],
            options={
                'verbose_name': '07-Fiyat Çarpan Kuralı',
                'verbose_name_plural': '07-Fiyat Çarpan Kuralları',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(max_length=255, verbose_name='Ürün Grubu Adı')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_groups', to='productconfig.brand', verbose_name='Marka')),
            ],
            options={
                'verbose_name': '02-Ürün Grubu',
                'verbose_name_plural': '02-Ürün Grupları',
                'ordering': ['brand', 'name'],
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.AddField(
            model_name='option',
            name='applicable_groups',
            field=models.ManyToManyField(blank=True, help_text='Bu seçeneğin uygulanabileceği ürün grupları', related_name='applicable_options', to='productconfig.productgroup', verbose_name='İlgili Gruplar'),
        ),
        migrations.AddField(
            model_name='category',
            name='product_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='productconfig.productgroup', verbose_name='Ürün Grubu'),
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(max_length=255, verbose_name='Ürün Modeli Adı')),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Taban Fiyat')),
                ('is_configurable', models.BooleanField(default=True, help_text='Ürün modelinin konfigüre edilebilir olup olmadığı', verbose_name='Yapılandırılabilir mi?')),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, help_text='Ürünün alabileceği minimum fiyat', max_digits=10, null=True, verbose_name='Minimum Fiyat')),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, help_text='Ürünün alabileceği maksimum fiyat', max_digits=10, null=True, verbose_name='Maksimum Fiyat')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_models', to='productconfig.category', verbose_name='Kategori')),
            ],
            options={
                'verbose_name': '04-Ürün Modeli',
                'verbose_name_plural': '04-Ürün Modelleri',
                'ordering': ['category', 'name'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ProcessStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('has_brand_relations', models.BooleanField(default=False, verbose_name='Marka İlişkileri')),
                ('has_group_relations', models.BooleanField(default=False, verbose_name='Grup İlişkileri')),
                ('has_category_relations', models.BooleanField(default=False, verbose_name='Kategori İlişkileri')),
                ('has_question_relations', models.BooleanField(default=False, verbose_name='Soru İlişkileri')),
                ('has_option_relations', models.BooleanField(default=False, verbose_name='Seçenek İlişkileri')),
                ('total_questions', models.PositiveIntegerField(default=0, verbose_name='Toplam Soru Sayısı')),
                ('total_options', models.PositiveIntegerField(default=0, verbose_name='Toplam Seçenek Sayısı')),
                ('total_dimension_options', models.PositiveIntegerField(default=0, help_text='Belirlenen gruplardaki CM içeren seçenek sayısı', verbose_name='Toplam Seçenek Ölçü Sayısı')),
                ('last_check', models.DateTimeField(auto_now=True, verbose_name='Son Kontrol')),
                ('completion_percentage', models.FloatField(default=0, verbose_name='Tamamlanma Yüzdesi')),
                ('product_model', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='process_status', to='productconfig.productmodel', verbose_name='Ürün Modeli')),
            ],
            options={
                'verbose_name': 'İşlem Durumu',
                'verbose_name_plural': 'İşlem Durumları',
            },
        ),
        migrations.AddField(
            model_name='option',
            name='applicable_product_models',
            field=models.ManyToManyField(blank=True, help_text='Bu seçeneğin uygulanabileceği ürün modelleri', related_name='applicable_options', to='productconfig.productmodel', verbose_name='İlgili Ürün Modelleri'),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(max_length=255, verbose_name='Soru Adı')),
                ('question_type', models.CharField(choices=[('choice', 'Tekli Seçim'), ('multiple_choice', 'Çoklu Seçim'), ('text_input', 'Metin Girişi')], max_length=25, verbose_name='Soru Tipi')),
                ('category_type', models.CharField(choices=[('master_question', 'Master Sorusu'), ('productmodel_question', 'Ürün Model Sorusu')], max_length=25, verbose_name='Soru Kategori Türü')),
                ('is_required', models.BooleanField(default=True, verbose_name='Zorunlu mu')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Soru Sırası')),
                ('variant_order', models.PositiveIntegerField(default=0, verbose_name='Variant Sırası')),
                ('help_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Yardım Metni')),
                ('applicable_brands', models.ManyToManyField(blank=True, related_name='applicable_questions', to='productconfig.brand', verbose_name='İlgili Markalar')),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='applicable_questions', to='productconfig.category', verbose_name='İlgili Kategoriler')),
                ('applicable_groups', models.ManyToManyField(blank=True, related_name='applicable_questions', to='productconfig.productgroup', verbose_name='İlgili Gruplar')),
                ('applicable_product_models', models.ManyToManyField(blank=True, related_name='applicable_questions', to='productconfig.productmodel', verbose_name='İlgili Ürün Modelleri')),
            ],
            options={
                'verbose_name': '05-Soru',
                'verbose_name_plural': '05-Sorular',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OldComponentCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('number_of_codes', models.PositiveIntegerField(default=1, verbose_name='Üretilecek Eski Kod Sayısı')),
                ('name', models.CharField(max_length=255, verbose_name='Kod Adı')),
                ('code_part_1', models.CharField(max_length=50, verbose_name='Kod Parçası 1')),
                ('type_sequence_no', models.CharField(help_text='Virgülle ayrılmış değerler girilebilir (örn: 01,02)', max_length=50, verbose_name='Tip Sıra No')),
                ('code_part_2', models.CharField(max_length=50, verbose_name='Kod Parçası 2')),
                ('code_part_3', models.CharField(max_length=50, verbose_name='Kod Parçası 3')),
                ('code_format', models.CharField(default='{part1} {tip_sıra_no}{part2} {part3}', help_text='Örnek: {part1} {tip_sıra_no}{part2} {part3}', max_length=255, verbose_name='Kod Formatı')),
                ('supports_multiple', models.BooleanField(default=False, verbose_name='Çoklu Seçim Desteği')),
                ('expected_options_1', models.ManyToManyField(related_name='codes_for_part1', to='productconfig.option', verbose_name='Beklenen Seçenekler 1')),
                ('expected_options_2', models.ManyToManyField(related_name='codes_for_part2', to='productconfig.option', verbose_name='Beklenen Seçenekler 2')),
                ('expected_options_3', models.ManyToManyField(related_name='codes_for_part3', to='productconfig.option', verbose_name='Beklenen Seçenekler 3')),
                ('question_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes_for_part1', to='productconfig.question', verbose_name='Soru 1')),
                ('question_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes_for_part2', to='productconfig.question', verbose_name='Soru 2')),
                ('question_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes_for_part3', to='productconfig.question', verbose_name='Soru 3')),
            ],
            options={
                'verbose_name': '12-Eski Bileşen Kodu',
                'verbose_name_plural': '12-Eski Bileşen Kodları',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DependentRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('name', models.CharField(max_length=255, verbose_name='Kural Adı')),
                ('rule_type', models.CharField(choices=[('show_on_option', 'Seçenek Seçilince Göster'), ('hide_on_option', 'Seçenek Seçilince Gizle')], default='show_on_option', max_length=20, verbose_name='Kural Tipi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Sıra')),
                ('trigger_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trigger_rules', to='productconfig.option', verbose_name='Tetikleyici Seçenek')),
                ('dependent_questions', models.ManyToManyField(related_name='dependent_rules', to='productconfig.question', verbose_name='Bağımlı Sorular')),
                ('parent_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_rules', to='productconfig.question', verbose_name='Ana Soru')),
            ],
            options={
                'verbose_name': '06-Bağımlı Soru Kuralı',
                'verbose_name_plural': '06-Bağımlı Soru Kuralları',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ConditionalOption',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('name', models.CharField(max_length=255)),
                ('display_mode', models.CharField(choices=[('override', 'Standart Seçenekleri Ez'), ('append', 'Standart Seçeneklere Ekle')], default='append', help_text='Seçeneklerin nasıl gösterileceğini belirler.', max_length=10, verbose_name='Görüntüleme Modu')),
                ('logical_operator', models.CharField(choices=[('AND', 'AND'), ('OR', 'OR')], max_length=3)),
                ('applicable_options', models.ManyToManyField(help_text='Bu koşullu seçenekler sonucunda gösterilecek seçenekler.', related_name='applicable_options', to='productconfig.option')),
                ('trigger_option_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trigger_option_1', to='productconfig.option')),
                ('trigger_option_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trigger_option_2', to='productconfig.option')),
                ('target_question', models.ForeignKey(help_text='Bu koşullu seçeneklerin gösterileceği soru.', on_delete=django.db.models.deletion.CASCADE, related_name='conditional_options', to='productconfig.question')),
            ],
            options={
                'verbose_name': '09-Koşullu Seçenek',
                'verbose_name_plural': '09-Koşullu Seçenekler',
            },
        ),
        migrations.CreateModel(
            name='QuestionOptionRelation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('relation_type', models.CharField(choices=[('master', 'Master'), ('model', 'Model'), ('conditional', 'Koşullu')], default='master', max_length=20, verbose_name='İlişki Tipi')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Sıra')),
                ('options', models.ManyToManyField(related_name='question_option_relations', to='productconfig.option', verbose_name='Seçenekler')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_option_relations', to='productconfig.question', verbose_name='Soru')),
            ],
            options={
                'verbose_name': '10-Soru-Seçenek İlişkisi',
                'verbose_name_plural': '10-Soru-Seçenek İlişkileri',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('project_name', models.TextField(blank=True, verbose_name='Proje Adı')),
                ('variant_code', models.CharField(default='', max_length=255, verbose_name='Varyant Kodu')),
                ('variant_description', models.TextField(blank=True, default='', verbose_name='Varyant Tanımı')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Toplam Fiyat (EUR)')),
                ('text_answers', models.JSONField(blank=True, default=dict, verbose_name='Metin Cevaplar')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('archived', 'Arşivlendi')], default='draft', max_length=20, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('old_component_codes', models.JSONField(blank=True, default=list, verbose_name='Eski Bileşen Kodları')),
                ('last_modified_date', models.DateTimeField(auto_now=True, verbose_name='Son Değişiklik Tarihi')),
                ('sap_item_code', models.CharField(blank=True, max_length=255, verbose_name='SAP Item Code')),
                ('sap_item_description', models.TextField(blank=True, verbose_name='SAP Item Description')),
                ('sap_U_eski_bilesen_kod', models.CharField(blank=True, max_length=255, verbose_name='SAP Eski Bileşen Kodu')),
                ('sap_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='SAP Price')),
                ('sap_currency', models.CharField(blank=True, max_length=10, verbose_name='SAP Currency')),
                ('answered_questions', models.ManyToManyField(blank=True, related_name='answered_variants', to='productconfig.question', verbose_name='Yanıtlanan Sorular')),
                ('applicable_brands', models.ManyToManyField(blank=True, related_name='applicable_variants', to='productconfig.brand', verbose_name='Uygulanabilir Markalar')),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='applicable_variants', to='productconfig.category', verbose_name='Uygulanabilir Kategoriler')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='productconfig.brand', verbose_name='Marka')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='productconfig.category', verbose_name='Kategori')),
                ('options', models.ManyToManyField(blank=True, related_name='variants', to='productconfig.option', verbose_name='Seçenekler')),
                ('product_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='productconfig.productgroup', verbose_name='Ürün Grubu')),
                ('product_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='productconfig.productmodel', verbose_name='Ürün Modeli')),
            ],
            options={
                'verbose_name': '11-Varyant',
                'verbose_name_plural': '11-Varyantlar',
                'ordering': ['variant_code'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('brand', 'product_group', 'name')},
        ),
        migrations.AddIndex(
            model_name='option',
            index=models.Index(fields=['name'], name='productconf_name_acdd8e_idx'),
        ),
        migrations.AddIndex(
            model_name='option',
            index=models.Index(fields=['option_type'], name='productconf_option__cd8948_idx'),
        ),
        migrations.AddIndex(
            model_name='option',
            index=models.Index(fields=['is_popular'], name='productconf_is_popu_104972_idx'),
        ),
    ]
