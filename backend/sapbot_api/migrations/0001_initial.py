# Generated by Django 5.0.8 on 2025-07-17 18:28

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatConversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('session_id', models.CharField(db_index=True, max_length=255, verbose_name='Oturum ID')),
                ('user_type', models.CharField(choices=[('user', 'Son Kullanıcı'), ('technical', 'Teknik Kullanıcı'), ('admin', 'Yönetici')], default='user', max_length=20, verbose_name='Kullanıcı Tipi')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='Tarayıcı Bilgisi')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Ek Bilgiler')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Son Aktivite')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Arşivlenmiş mi?')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sapbot_conversations', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Chat Konuşması',
                'verbose_name_plural': 'Chat Konuşmaları',
                'db_table': 'sapbot_chat_conversations',
            },
        ),
        migrations.CreateModel(
            name='ConversationSummary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('summary', models.TextField(verbose_name='Özet')),
                ('main_topics', models.JSONField(default=list, verbose_name='Ana Konular')),
                ('sap_modules_discussed', models.JSONField(default=list, verbose_name='Tartışılan SAP Modülleri')),
                ('resolution_status', models.CharField(choices=[('resolved', 'Çözüldü'), ('partial', 'Kısmen Çözüldü'), ('unresolved', 'Çözülmedi'), ('redirected', 'Yönlendirildi')], default='unresolved', max_length=50, verbose_name='Çözüm Durumu')),
                ('auto_generated', models.BooleanField(default=True, verbose_name='Otomatik Oluşturuldu mu?')),
                ('conversation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='sapbot_api.chatconversation', verbose_name='Konuşma')),
            ],
            options={
                'verbose_name': 'Konuşma Özeti',
                'verbose_name_plural': 'Konuşma Özetleri',
                'db_table': 'sapbot_conversation_summaries',
            },
        ),
        migrations.CreateModel(
            name='DocumentSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('document_type', models.CharField(choices=[('pdf', 'PDF Döküman'), ('video', 'Video Dosyası'), ('manual', 'Manuel Giriş'), ('api', 'API Dokümantasyonu'), ('web', 'Web Sayfası')], max_length=20, verbose_name='Döküman Tipi')),
                ('file_path', models.FileField(blank=True, null=True, upload_to='sapbot_api/documents/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'mp4', 'avi', 'mov', 'mkv', 'webm'])], verbose_name='Dosya Yolu')),
                ('file_size', models.BigIntegerField(blank=True, null=True, verbose_name='Dosya Boyutu (bytes)')),
                ('file_hash', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='Dosya Hash')),
                ('language', models.CharField(choices=[('tr', 'Türkçe'), ('en', 'İngilizce'), ('mixed', 'Karışık (TR/EN)')], default='tr', max_length=10, verbose_name='Dil')),
                ('processing_status', models.CharField(choices=[('pending', 'Beklemede'), ('processing', 'İşleniyor'), ('completed', 'Tamamlandı'), ('failed', 'Başarısız'), ('cancelled', 'İptal Edildi')], default='pending', max_length=20, verbose_name='İşleme Durumu')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='İşlenme Tarihi')),
                ('processing_error', models.TextField(blank=True, null=True, verbose_name='İşleme Hatası')),
                ('source_url', models.URLField(blank=True, null=True, verbose_name='Kaynak URL')),
                ('version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Versiyon')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='Etiketler')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Ek Bilgiler')),
                ('priority', models.IntegerField(choices=[(1, 'Düşük'), (2, 'Normal'), (3, 'Yüksek'), (4, 'Kritik')], default=1, verbose_name='Öncelik')),
                ('is_public', models.BooleanField(default=True, verbose_name='Herkese Açık mı?')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL, verbose_name='Yükleyen')),
            ],
            options={
                'verbose_name': 'Döküman Kaynağı',
                'verbose_name_plural': 'Döküman Kaynakları',
                'db_table': 'sapbot_document_sources',
            },
        ),
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Etiket Adı')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('tag_type', models.CharField(choices=[('category', 'Kategori'), ('module', 'Modül'), ('feature', 'Özellik'), ('version', 'Versiyon'), ('custom', 'Özel')], default='custom', max_length=20, verbose_name='Etiket Tipi')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='Renk')),
                ('usage_count', models.IntegerField(default=0, verbose_name='Kullanım Sayısı')),
            ],
            options={
                'verbose_name': 'Döküman Etiketi',
                'verbose_name_plural': 'Döküman Etiketleri',
                'db_table': 'sapbot_document_tags',
                'indexes': [models.Index(fields=['tag_type'], name='sapbot_docu_tag_typ_abfaa3_idx'), models.Index(fields=['usage_count'], name='sapbot_docu_usage_c_4803f2_idx')],
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Oturum ID')),
                ('error_type', models.CharField(choices=[('api_error', 'API Hatası'), ('database_error', 'Veritabanı Hatası'), ('processing_error', 'İşleme Hatası'), ('external_api_error', 'Harici API Hatası'), ('validation_error', 'Doğrulama Hatası'), ('authentication_error', 'Kimlik Doğrulama Hatası'), ('permission_error', 'Yetki Hatası'), ('system_error', 'Sistem Hatası')], max_length=50, verbose_name='Hata Tipi')),
                ('error_level', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('critical', 'Kritik')], max_length=20, verbose_name='Hata Seviyesi')),
                ('error_message', models.TextField(verbose_name='Hata Mesajı')),
                ('stack_trace', models.TextField(blank=True, null=True, verbose_name='Stack Trace')),
                ('component', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bileşen')),
                ('function_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fonksiyon Adı')),
                ('line_number', models.IntegerField(blank=True, null=True, verbose_name='Satır Numarası')),
                ('request_data', models.JSONField(blank=True, default=dict, verbose_name='İstek Verisi')),
                ('context', models.JSONField(blank=True, default=dict, verbose_name='Bağlam')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='Tarayıcı Bilgisi')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='Çözüldü mü?')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Çözülme Tarihi')),
                ('resolution_notes', models.TextField(blank=True, null=True, verbose_name='Çözüm Notları')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sapbot_errors', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Hata Log',
                'verbose_name_plural': 'Hata Logları',
                'db_table': 'sapbot_error_logs',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('content', models.TextField(verbose_name='İçerik')),
                ('content_hash', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='İçerik Hash')),
                ('content_length', models.IntegerField(verbose_name='İçerik Uzunluğu')),
                ('embedding', models.JSONField(blank=True, null=True, verbose_name='Vector Embedding')),
                ('embedding_model', models.CharField(blank=True, max_length=200, null=True, verbose_name='Embedding Model')),
                ('page_number', models.IntegerField(blank=True, null=True, verbose_name='Sayfa Numarası')),
                ('section_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bölüm Başlığı')),
                ('sap_module', models.CharField(blank=True, choices=[('FI', 'Mali Muhasebe'), ('MM', 'Malzeme Yönetimi'), ('SD', 'Satış ve Dağıtım'), ('PP', 'Üretim Planlama'), ('HR', 'İnsan Kaynakları'), ('QM', 'Kalite Yönetimi'), ('PM', 'Tesis Bakımı'), ('CO', 'Maliyet Kontrolü'), ('WM', 'Depo Yönetimi'), ('CRM', 'Müşteri İlişkileri'), ('BI', 'Business Intelligence'), ('ADMIN', 'Sistem Yönetimi'), ('OTHER', 'Diğer')], max_length=10, null=True, verbose_name='SAP Modülü')),
                ('technical_level', models.CharField(choices=[('user', 'Son Kullanıcı'), ('admin', 'Yönetici'), ('developer', 'Geliştirici'), ('mixed', 'Karışık')], default='user', max_length=20, verbose_name='Teknik Seviye')),
                ('keywords', models.JSONField(blank=True, default=list, verbose_name='Anahtar Kelimeler')),
                ('relevance_score', models.FloatField(default=1.0, verbose_name='Relevans Skoru')),
                ('usage_count', models.IntegerField(default=0, verbose_name='Kullanım Sayısı')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Son Kullanım')),
                ('quality_score', models.FloatField(blank=True, null=True, verbose_name='Kalite Skoru')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Doğrulanmış mı?')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='sapbot_api.documentsource', verbose_name='Kaynak Döküman')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_chunks', to=settings.AUTH_USER_MODEL, verbose_name='Doğrulayan')),
            ],
            options={
                'verbose_name': 'Bilgi Parçası',
                'verbose_name_plural': 'Bilgi Parçaları',
                'db_table': 'sapbot_knowledge_chunks',
            },
        ),
        migrations.CreateModel(
            name='DocumentChunkRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('relation_type', models.CharField(choices=[('follows', 'Takip Eder'), ('references', 'Referans Verir'), ('contradicts', 'Çelişir'), ('supports', 'Destekler'), ('updates', 'Günceller')], max_length=20, verbose_name='İlişki Tipi')),
                ('confidence', models.FloatField(default=1.0, verbose_name='Güven Değeri')),
                ('auto_generated', models.BooleanField(default=True, verbose_name='Otomatik Oluşturuldu mu?')),
                ('source_chunk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_relations', to='sapbot_api.knowledgechunk', verbose_name='Kaynak Chunk')),
                ('target_chunk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_relations', to='sapbot_api.knowledgechunk', verbose_name='Hedef Chunk')),
            ],
            options={
                'verbose_name': 'Chunk İlişkisi',
                'verbose_name_plural': 'Chunk İlişkileri',
                'db_table': 'sapbot_document_chunk_relations',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('message_type', models.CharField(choices=[('user', 'Kullanıcı Mesajı'), ('assistant', 'Asistan Yanıtı'), ('system', 'Sistem Mesajı'), ('error', 'Hata Mesajı')], max_length=20, verbose_name='Mesaj Tipi')),
                ('content', models.TextField(verbose_name='Mesaj İçeriği')),
                ('content_hash', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name="İçerik Hash'i")),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Yanıt Süresi (saniye)')),
                ('token_count', models.IntegerField(blank=True, null=True, verbose_name='Token Sayısı')),
                ('model_used', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kullanılan Model')),
                ('intent_detected', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tespit Edilen Niyet')),
                ('confidence_score', models.FloatField(blank=True, null=True, verbose_name='Güven Skoru')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Ek Bilgiler')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='sapbot_api.chatconversation', verbose_name='Konuşma')),
                ('sources_used', models.ManyToManyField(blank=True, related_name='used_in_messages', to='sapbot_api.knowledgechunk', verbose_name='Kullanılan Kaynaklar')),
            ],
            options={
                'verbose_name': 'Chat Mesajı',
                'verbose_name_plural': 'Chat Mesajları',
                'db_table': 'sapbot_chat_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceWindow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('start_time', models.DateTimeField(verbose_name='Başlangıç Zamanı')),
                ('end_time', models.DateTimeField(verbose_name='Bitiş Zamanı')),
                ('status', models.CharField(choices=[('scheduled', 'Planlandı'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='scheduled', max_length=20, verbose_name='Durum')),
                ('affects_api', models.BooleanField(default=True, verbose_name="API'yi Etkiler mi?")),
                ('affects_chat', models.BooleanField(default=True, verbose_name="Chat'i Etkiler mi?")),
                ('affects_upload', models.BooleanField(default=False, verbose_name="Upload'ı Etkiler mi?")),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
            ],
            options={
                'verbose_name': 'Bakım Penceresi',
                'verbose_name_plural': 'Bakım Pencereleri',
                'db_table': 'sapbot_maintenance_windows',
            },
        ),
        migrations.CreateModel(
            name='MessageFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('rating', models.IntegerField(choices=[(1, 'Çok Kötü'), (2, 'Kötü'), (3, 'Orta'), (4, 'İyi'), (5, 'Çok İyi')], verbose_name='Puan')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Yorum')),
                ('is_helpful', models.BooleanField(blank=True, null=True, verbose_name='Faydalı mı?')),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Kullanıcı IP')),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='sapbot_api.chatmessage', verbose_name='Mesaj')),
            ],
            options={
                'verbose_name': 'Mesaj Geri Bildirimi',
                'verbose_name_plural': 'Mesaj Geri Bildirimleri',
                'db_table': 'sapbot_message_feedback',
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('component', models.CharField(choices=[('api', 'API'), ('chat', 'Chat'), ('embedding', 'Embedding'), ('search', 'Arama'), ('document_processing', 'Döküman İşleme'), ('database', 'Veritabanı'), ('cache', 'Cache'), ('external_api', 'Harici API')], max_length=50, verbose_name='Bileşen')),
                ('metric_name', models.CharField(max_length=100, verbose_name='Metrik Adı')),
                ('value', models.FloatField(verbose_name='Değer')),
                ('unit', models.CharField(max_length=20, verbose_name='Birim')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Zaman Damgası')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Ek Bilgiler')),
            ],
            options={
                'verbose_name': 'Performans Metriği',
                'verbose_name_plural': 'Performans Metrikleri',
                'db_table': 'sapbot_performance_metrics',
                'indexes': [models.Index(fields=['component', 'metric_name'], name='sapbot_perf_compone_30bb1f_idx'), models.Index(fields=['timestamp'], name='sapbot_perf_timesta_dfe8b5_idx')],
            },
        ),
        migrations.CreateModel(
            name='QueryAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('session_id', models.CharField(db_index=True, max_length=255, verbose_name='Oturum ID')),
                ('query', models.TextField(verbose_name='Sorgu')),
                ('query_hash', models.CharField(db_index=True, max_length=64, verbose_name='Sorgu Hash')),
                ('query_length', models.IntegerField(verbose_name='Sorgu Uzunluğu')),
                ('user_type', models.CharField(choices=[('user', 'Son Kullanıcı'), ('technical', 'Teknik Kullanıcı'), ('admin', 'Yönetici'), ('anonymous', 'Anonim')], max_length=20, verbose_name='Kullanıcı Tipi')),
                ('sap_module_detected', models.CharField(blank=True, choices=[('FI', 'Mali Muhasebe'), ('MM', 'Malzeme Yönetimi'), ('SD', 'Satış ve Dağıtım'), ('PP', 'Üretim Planlama'), ('HR', 'İnsan Kaynakları'), ('QM', 'Kalite Yönetimi'), ('PM', 'Tesis Bakımı'), ('CO', 'Maliyet Kontrolü'), ('WM', 'Depo Yönetimi'), ('CRM', 'Müşteri İlişkileri'), ('BI', 'Business Intelligence'), ('ADMIN', 'Sistem Yönetimi'), ('OTHER', 'Diğer')], max_length=10, null=True, verbose_name='Tespit Edilen SAP Modülü')),
                ('intent_detected', models.CharField(blank=True, choices=[('error_solving', 'Hata Çözme'), ('configuration', 'Yapılandırma'), ('how_to', 'Nasıl Yapılır'), ('explanation', 'Açıklama'), ('reporting', 'Raporlama'), ('troubleshooting', 'Sorun Giderme'), ('feature_request', 'Özellik İsteği'), ('general', 'Genel')], max_length=50, null=True, verbose_name='Tespit Edilen Niyet')),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Güven Skoru')),
                ('response_generated', models.BooleanField(default=False, verbose_name='Yanıt Oluşturuldu mu?')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Yanıt Süresi (saniye)')),
                ('sources_used_count', models.IntegerField(default=0, verbose_name='Kullanılan Kaynak Sayısı')),
                ('tokens_used', models.IntegerField(blank=True, null=True, verbose_name='Kullanılan Token Sayısı')),
                ('cost_estimate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Tahmini Maliyet')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='Tarayıcı Bilgisi')),
                ('language_detected', models.CharField(blank=True, max_length=10, null=True, verbose_name='Tespit Edilen Dil')),
                ('error_occurred', models.BooleanField(default=False, verbose_name='Hata Oluştu mu?')),
                ('error_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Hata Tipi')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Ek Bilgiler')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sapbot_queries', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Sorgu Analitiği',
                'verbose_name_plural': 'Sorgu Analitikleri',
                'db_table': 'sapbot_query_analytics',
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Anahtar')),
                ('value', models.TextField(verbose_name='Değer')),
                ('config_type', models.CharField(choices=[('string', 'Metin'), ('integer', 'Sayı'), ('float', 'Ondalık'), ('boolean', 'Boolean'), ('json', 'JSON'), ('list', 'Liste')], default='string', max_length=20, verbose_name='Veri Tipi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_sensitive', models.BooleanField(default=False, verbose_name='Hassas Veri mi?')),
                ('is_editable', models.BooleanField(default=True, verbose_name='Düzenlenebilir mi?')),
                ('category', models.CharField(default='general', max_length=50, verbose_name='Kategori')),
                ('default_value', models.TextField(blank=True, null=True, verbose_name='Varsayılan Değer')),
                ('validation_regex', models.CharField(blank=True, max_length=255, null=True, verbose_name='Doğrulama Regex')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Güncelleyen')),
            ],
            options={
                'verbose_name': 'Sistem Konfigürasyonu',
                'verbose_name_plural': 'Sistem Konfigürasyonları',
                'db_table': 'sapbot_system_configurations',
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('component', models.CharField(max_length=50, verbose_name='Bileşen')),
                ('status', models.CharField(choices=[('healthy', 'Sağlıklı'), ('warning', 'Uyarı'), ('critical', 'Kritik'), ('down', 'Çalışmıyor')], max_length=20, verbose_name='Durum')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Yanıt Süresi (ms)')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Hata Mesajı')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Detaylar')),
            ],
            options={
                'verbose_name': 'Sistem Sağlığı',
                'verbose_name_plural': 'Sistem Sağlık Durumları',
                'db_table': 'sapbot_system_health',
                'indexes': [models.Index(fields=['component', 'created_at'], name='sapbot_syst_compone_99868d_idx'), models.Index(fields=['status'], name='sapbot_syst_status_a33354_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=20, verbose_name='Log Seviyesi')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('module', models.CharField(blank=True, max_length=100, null=True, verbose_name='Modül')),
                ('function', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fonksiyon')),
                ('line_number', models.IntegerField(blank=True, null=True, verbose_name='Satır Numarası')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Oturum ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='Tarayıcı Bilgisi')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name='Ek Veriler')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Sistem Log',
                'verbose_name_plural': 'Sistem Logları',
                'db_table': 'sapbot_system_logs',
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('metric_name', models.CharField(max_length=100, verbose_name='Metrik Adı')),
                ('metric_type', models.CharField(choices=[('counter', 'Sayaç'), ('gauge', 'Gösterge'), ('histogram', 'Histogram'), ('summary', 'Özet')], default='counter', max_length=20, verbose_name='Metrik Tipi')),
                ('value', models.FloatField(verbose_name='Değer')),
                ('labels', models.JSONField(blank=True, default=dict, verbose_name='Etiketler')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Zaman Damgası')),
            ],
            options={
                'verbose_name': 'Sistem Metriği',
                'verbose_name_plural': 'Sistem Metrikleri',
                'db_table': 'sapbot_system_metrics',
                'indexes': [models.Index(fields=['metric_name', 'timestamp'], name='sapbot_syst_metric__f5b99c_idx'), models.Index(fields=['metric_type'], name='sapbot_syst_metric__b39fcb_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('notification_type', models.CharField(choices=[('info', 'Bilgi'), ('warning', 'Uyarı'), ('error', 'Hata'), ('success', 'Başarı')], default='info', max_length=20, verbose_name='Bildirim Tipi')),
                ('priority', models.IntegerField(choices=[(1, 'Düşük'), (2, 'Normal'), (3, 'Yüksek'), (4, 'Kritik')], default=2, verbose_name='Öncelik')),
                ('is_system_wide', models.BooleanField(default=False, verbose_name='Sistem Geneli mi?')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu mu?')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Sona Erme Tarihi')),
                ('action_url', models.URLField(blank=True, null=True, verbose_name='Eylem URL')),
                ('action_text', models.CharField(blank=True, max_length=50, null=True, verbose_name='Eylem Metni')),
                ('target_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Hedef Kullanıcılar')),
            ],
            options={
                'verbose_name': 'Sistem Bildirimi',
                'verbose_name_plural': 'Sistem Bildirimleri',
                'db_table': 'sapbot_system_notifications',
            },
        ),
        migrations.CreateModel(
            name='UsageStatistics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('date', models.DateField(verbose_name='Tarih')),
                ('metric_type', models.CharField(choices=[('daily', 'Günlük'), ('weekly', 'Haftalık'), ('monthly', 'Aylık'), ('yearly', 'Yıllık')], max_length=20, verbose_name='Metrik Tipi')),
                ('total_queries', models.IntegerField(default=0, verbose_name='Toplam Sorgu')),
                ('successful_queries', models.IntegerField(default=0, verbose_name='Başarılı Sorgu')),
                ('failed_queries', models.IntegerField(default=0, verbose_name='Başarısız Sorgu')),
                ('unique_users', models.IntegerField(default=0, verbose_name='Benzersiz Kullanıcı')),
                ('unique_sessions', models.IntegerField(default=0, verbose_name='Benzersiz Oturum')),
                ('avg_response_time', models.FloatField(default=0.0, verbose_name='Ortalama Yanıt Süresi')),
                ('avg_satisfaction', models.FloatField(blank=True, null=True, verbose_name='Ortalama Memnuniyet')),
                ('total_tokens_used', models.IntegerField(default=0, verbose_name='Toplam Kullanılan Token')),
                ('total_cost', models.DecimalField(decimal_places=4, default=0.0, max_digits=10, verbose_name='Toplam Maliyet')),
                ('documents_processed', models.IntegerField(default=0, verbose_name='İşlenen Döküman')),
                ('chunks_created', models.IntegerField(default=0, verbose_name='Oluşturulan Chunk')),
                ('top_sap_modules', models.JSONField(blank=True, default=list, verbose_name='En Çok Kullanılan SAP Modülleri')),
                ('top_intents', models.JSONField(blank=True, default=list, verbose_name='En Çok Kullanılan Niyetler')),
                ('error_breakdown', models.JSONField(blank=True, default=dict, verbose_name='Hata Dağılımı')),
            ],
            options={
                'verbose_name': 'Kullanım İstatistiği',
                'verbose_name_plural': 'Kullanım İstatistikleri',
                'db_table': 'sapbot_usage_statistics',
                'indexes': [models.Index(fields=['date', 'metric_type'], name='sapbot_usag_date_f2da2d_idx'), models.Index(fields=['metric_type'], name='sapbot_usag_metric__7d0ed6_idx')],
                'unique_together': {('date', 'metric_type')},
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('activity_type', models.CharField(choices=[('login', 'Giriş'), ('logout', 'Çıkış'), ('chat', 'Chat'), ('upload', 'Dosya Yükleme'), ('search', 'Arama'), ('download', 'İndirme'), ('settings', 'Ayarlar'), ('api_call', 'API Çağrısı')], max_length=20, verbose_name='Aktivite Tipi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='Tarayıcı Bilgisi')),
                ('session_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='Oturum Anahtarı')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Ek Bilgiler')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sapbot_activities', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Aktivitesi',
                'verbose_name_plural': 'Kullanıcı Aktiviteleri',
                'db_table': 'sapbot_user_activities',
            },
        ),
        migrations.CreateModel(
            name='UserApiKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='Ad')),
                ('key', models.CharField(max_length=64, unique=True, verbose_name='API Anahtarı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('permissions', models.JSONField(blank=True, default=list, verbose_name='İzinler')),
                ('rate_limit', models.IntegerField(default=60, verbose_name='Dakika Başı Limit')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Sona Erme Zamanı')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Son Kullanım')),
                ('usage_count', models.IntegerField(default=0, verbose_name='Kullanım Sayısı')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sapbot_api_keys', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı API Anahtarı',
                'verbose_name_plural': 'Kullanıcı API Anahtarları',
                'db_table': 'sapbot_user_api_keys',
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Oturum ID')),
                ('feedback_type', models.CharField(choices=[('rating', 'Puan'), ('comment', 'Yorum'), ('bug_report', 'Hata Bildirimi'), ('feature_request', 'Özellik İsteği'), ('general', 'Genel')], max_length=20, verbose_name='Geri Bildirim Tipi')),
                ('rating', models.IntegerField(blank=True, choices=[(1, 'Çok Kötü'), (2, 'Kötü'), (3, 'Orta'), (4, 'İyi'), (5, 'Mükemmel')], null=True, verbose_name='Puan')),
                ('satisfaction', models.CharField(blank=True, choices=[('very_dissatisfied', 'Çok Memnun Değil'), ('dissatisfied', 'Memnun Değil'), ('neutral', 'Nötr'), ('satisfied', 'Memnun'), ('very_satisfied', 'Çok Memnun')], max_length=20, null=True, verbose_name='Memnuniyet')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Yorum')),
                ('is_helpful', models.BooleanField(blank=True, null=True, verbose_name='Faydalı mı?')),
                ('improvement_suggestions', models.TextField(blank=True, null=True, verbose_name='İyileştirme Önerileri')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='İletişim Email')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='Tarayıcı Bilgisi')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Ek Bilgiler')),
                ('is_processed', models.BooleanField(default=False, verbose_name='İşlendi mi?')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='İşlenme Tarihi')),
                ('response_sent', models.BooleanField(default=False, verbose_name='Yanıt Gönderildi mi?')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_records', to='sapbot_api.chatmessage', verbose_name='İlgili Mesaj')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sapbot_feedback', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Geri Bildirimi',
                'verbose_name_plural': 'Kullanıcı Geri Bildirimleri',
                'db_table': 'sapbot_user_feedback',
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('theme', models.CharField(choices=[('light', 'Açık Tema'), ('dark', 'Koyu Tema'), ('auto', 'Otomatik')], default='light', max_length=10, verbose_name='Tema')),
                ('font_size', models.IntegerField(default=14, verbose_name='Font Boyutu')),
                ('show_typing_indicator', models.BooleanField(default=True, verbose_name='Yazıyor Göstergesini Göster')),
                ('sound_enabled', models.BooleanField(default=True, verbose_name='Ses Etkin')),
                ('keyboard_shortcuts', models.BooleanField(default=True, verbose_name='Klavye Kısayolları')),
                ('auto_save_conversations', models.BooleanField(default=True, verbose_name='Konuşmaları Otomatik Kaydet')),
                ('show_source_preview', models.BooleanField(default=True, verbose_name='Kaynak Önizlemesi Göster')),
                ('compact_mode', models.BooleanField(default=False, verbose_name='Kompakt Mod')),
                ('custom_css', models.TextField(blank=True, null=True, verbose_name='Özel CSS')),
                ('dashboard_widgets', models.JSONField(blank=True, default=list, verbose_name="Dashboard Widget'ları")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sapbot_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Tercihi',
                'verbose_name_plural': 'Kullanıcı Tercihleri',
                'db_table': 'sapbot_user_preferences',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('display_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Görünen Ad')),
                ('user_type', models.CharField(choices=[('user', 'Son Kullanıcı'), ('technical', 'Teknik Kullanıcı'), ('admin', 'Yönetici'), ('super_admin', 'Süper Yönetici')], default='user', max_length=20, verbose_name='Kullanıcı Tipi')),
                ('preferred_language', models.CharField(choices=[('tr', 'Türkçe'), ('en', 'İngilizce')], default='tr', max_length=5, verbose_name='Tercih Edilen Dil')),
                ('sap_modules', models.JSONField(blank=True, default=list, help_text='Kullanıcının erişebileceği SAP modülleri', verbose_name='SAP Modülleri')),
                ('chat_settings', models.JSONField(blank=True, default=dict, verbose_name='Chat Ayarları')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Bildirimleri')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Push Bildirimleri')),
                ('session_timeout', models.IntegerField(default=1440, verbose_name='Oturum Timeout (dakika)')),
                ('max_daily_requests', models.IntegerField(default=100, verbose_name='Günlük Maksimum İstek')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='sapbot_api/avatars/', verbose_name='Avatar')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Biyografi')),
                ('is_beta_user', models.BooleanField(default=False, verbose_name='Beta Kullanıcısı mı?')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Son Giriş IP')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='Son Aktivite')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sapbot_profile', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Profili',
                'verbose_name_plural': 'Kullanıcı Profilleri',
                'db_table': 'sapbot_user_profiles',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('session_key', models.CharField(max_length=255, unique=True, verbose_name='Oturum Anahtarı')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Adresi')),
                ('user_agent', models.TextField(verbose_name='Tarayıcı Bilgisi')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Konum')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Son Aktivite')),
                ('expires_at', models.DateTimeField(verbose_name='Sona Erme Zamanı')),
                ('device_info', models.JSONField(blank=True, default=dict, verbose_name='Cihaz Bilgisi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sapbot_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Oturumu',
                'verbose_name_plural': 'Kullanıcı Oturumları',
                'db_table': 'sapbot_user_sessions',
            },
        ),
        migrations.CreateModel(
            name='APIQuota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('api_key', models.CharField(blank=True, max_length=100, null=True, verbose_name='API Anahtarı')),
                ('endpoint', models.CharField(max_length=200, verbose_name='Endpoint')),
                ('quota_type', models.CharField(choices=[('daily', 'Günlük'), ('monthly', 'Aylık'), ('hourly', 'Saatlik')], default='daily', max_length=20, verbose_name='Kota Tipi')),
                ('limit_count', models.IntegerField(verbose_name='Limit Sayısı')),
                ('current_count', models.IntegerField(default=0, verbose_name='Mevcut Kullanım')),
                ('reset_at', models.DateTimeField(verbose_name='Sıfırlama Zamanı')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'API Kotası',
                'verbose_name_plural': 'API Kotaları',
                'db_table': 'sapbot_api_quotas',
                'indexes': [models.Index(fields=['user', 'endpoint'], name='sapbot_api__user_id_cbe692_idx'), models.Index(fields=['reset_at'], name='sapbot_api__reset_a_61e7d1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='chatconversation',
            index=models.Index(fields=['session_id'], name='sapbot_chat_session_c43485_idx'),
        ),
        migrations.AddIndex(
            model_name='chatconversation',
            index=models.Index(fields=['user_type'], name='sapbot_chat_user_ty_48acf8_idx'),
        ),
        migrations.AddIndex(
            model_name='chatconversation',
            index=models.Index(fields=['last_activity'], name='sapbot_chat_last_ac_8eb89c_idx'),
        ),
        migrations.AddIndex(
            model_name='chatconversation',
            index=models.Index(fields=['is_archived'], name='sapbot_chat_is_arch_6e87b4_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsource',
            index=models.Index(fields=['document_type', 'language'], name='sapbot_docu_documen_2b218d_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsource',
            index=models.Index(fields=['processing_status'], name='sapbot_docu_process_8df08c_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsource',
            index=models.Index(fields=['file_hash'], name='sapbot_docu_file_ha_dac822_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsource',
            index=models.Index(fields=['priority', 'is_active'], name='sapbot_docu_priorit_16d026_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['error_type', 'error_level'], name='sapbot_erro_error_t_1577bf_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['created_at'], name='sapbot_erro_created_11a043_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['is_resolved'], name='sapbot_erro_is_reso_278e67_idx'),
        ),
        migrations.AddIndex(
            model_name='knowledgechunk',
            index=models.Index(fields=['sap_module', 'technical_level'], name='sapbot_know_sap_mod_7c2632_idx'),
        ),
        migrations.AddIndex(
            model_name='knowledgechunk',
            index=models.Index(fields=['content_hash'], name='sapbot_know_content_292c13_idx'),
        ),
        migrations.AddIndex(
            model_name='knowledgechunk',
            index=models.Index(fields=['usage_count'], name='sapbot_know_usage_c_7ab9ba_idx'),
        ),
        migrations.AddIndex(
            model_name='knowledgechunk',
            index=models.Index(fields=['relevance_score'], name='sapbot_know_relevan_0d392f_idx'),
        ),
        migrations.AddIndex(
            model_name='knowledgechunk',
            index=models.Index(fields=['is_verified'], name='sapbot_know_is_veri_aa7329_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentchunkrelation',
            unique_together={('source_chunk', 'target_chunk', 'relation_type')},
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['conversation', 'created_at'], name='sapbot_chat_convers_e6876f_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type'], name='sapbot_chat_message_e99a95_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['content_hash'], name='sapbot_chat_content_fa72e8_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['intent_detected'], name='sapbot_chat_intent__4b6374_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancewindow',
            index=models.Index(fields=['start_time', 'end_time'], name='sapbot_main_start_t_a05272_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancewindow',
            index=models.Index(fields=['status'], name='sapbot_main_status_ddc901_idx'),
        ),
        migrations.AddIndex(
            model_name='queryanalytics',
            index=models.Index(fields=['query_hash'], name='sapbot_quer_query_h_33b7fa_idx'),
        ),
        migrations.AddIndex(
            model_name='queryanalytics',
            index=models.Index(fields=['sap_module_detected'], name='sapbot_quer_sap_mod_75d82a_idx'),
        ),
        migrations.AddIndex(
            model_name='queryanalytics',
            index=models.Index(fields=['intent_detected'], name='sapbot_quer_intent__cc5c18_idx'),
        ),
        migrations.AddIndex(
            model_name='queryanalytics',
            index=models.Index(fields=['user_type'], name='sapbot_quer_user_ty_b9a8a1_idx'),
        ),
        migrations.AddIndex(
            model_name='queryanalytics',
            index=models.Index(fields=['created_at'], name='sapbot_quer_created_3f6533_idx'),
        ),
        migrations.AddIndex(
            model_name='queryanalytics',
            index=models.Index(fields=['response_generated'], name='sapbot_quer_respons_03859b_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfiguration',
            index=models.Index(fields=['category'], name='sapbot_syst_categor_eca964_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfiguration',
            index=models.Index(fields=['is_editable'], name='sapbot_syst_is_edit_c9e09a_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['level', 'created_at'], name='sapbot_syst_level_c7b2a4_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['module'], name='sapbot_syst_module_1b6102_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['session_id'], name='sapbot_syst_session_a5ac35_idx'),
        ),
        migrations.AddIndex(
            model_name='systemnotification',
            index=models.Index(fields=['is_system_wide', 'is_read'], name='sapbot_syst_is_syst_4d7e89_idx'),
        ),
        migrations.AddIndex(
            model_name='systemnotification',
            index=models.Index(fields=['expires_at'], name='sapbot_syst_expires_7dd303_idx'),
        ),
        migrations.AddIndex(
            model_name='systemnotification',
            index=models.Index(fields=['priority'], name='sapbot_syst_priorit_debeda_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'activity_type'], name='sapbot_user_user_id_b892e2_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['created_at'], name='sapbot_user_created_614a89_idx'),
        ),
        migrations.AddIndex(
            model_name='userapikey',
            index=models.Index(fields=['key'], name='sapbot_user_key_f1de18_idx'),
        ),
        migrations.AddIndex(
            model_name='userapikey',
            index=models.Index(fields=['is_active'], name='sapbot_user_is_acti_5a0cb1_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['feedback_type'], name='sapbot_user_feedbac_09d9fd_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['rating'], name='sapbot_user_rating_4ec36d_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['is_processed'], name='sapbot_user_is_proc_3d5c21_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['created_at'], name='sapbot_user_created_06e3a8_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['user_type'], name='sapbot_user_user_ty_0e65cf_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['is_beta_user'], name='sapbot_user_is_beta_04b11d_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user', 'is_active'], name='sapbot_user_user_id_b84ae2_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['expires_at'], name='sapbot_user_expires_21b253_idx'),
        ),
    ]
